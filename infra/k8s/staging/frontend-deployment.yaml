apiVersion: apps/v1
kind: Deployment
metadata:
  name: project01-frontend
  namespace: staging
  labels:
    app: project01
    component: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: project01
      component: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: project01
        component: frontend
    spec:
      containers:
      - name: frontend
        image: project01:latest-frontend
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        env:
        - name: VITE_API_URL
          value: "https://staging.project01.example.com/api"
        - name: VITE_ENV
          value: "staging"
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "100m"
            memory: "256Mi"
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 15
---
apiVersion: v1
kind: Service
metadata:
  name: project01-frontend
  namespace: staging
  labels:
    app: project01
    component: frontend
spec:
  selector:
    app: project01
    component: frontend
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: project01-ingress
  namespace: staging
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  tls:
  - hosts:
    - staging.project01.example.com
    secretName: project01-tls-cert
  rules:
  - host: staging.project01.example.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: project01-backend
            port:
              number: 80
      - path: /
        pathType: Prefix
        backend:
          service:
            name: project01-frontend
            port:
              number: 80
